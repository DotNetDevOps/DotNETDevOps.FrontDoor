{
  "upstreams": {
    "io-board-cdn": {
      "servers": [
        {
          "host": "ioboard.blob.core.windows.net",
          "weigth": 1
        }
      ]
    },
    "dotnetdevops-cdn": {
      "servers": [
        {
          "host": "dotnetdevops.blob.core.windows.net",
          "weigth": 1
        }
      ]
    },
    "kjeldager-cdn": {
      "servers": [
        {
          "host": "kjeldager.blob.core.windows.net",
          "weigth": 1
        }
      ]
    },
    "dotnetdevops-provider": {
      "servers": [
        {
          "host": "localhost:44340",
          "weigth": 1
        }
      ]
    },
    "dotnetdevops-www": {
      "servers": [
        {
          "host": "dotnetdevops-www.azurewebsites.net",
          "weigth": 1
        }
      ]
    },
    "sociallink-provider": {
      "servers": [
        {
          "host": "localhost:7071",
          "weigth": 1
        }
      ]
    },
    "dotnetdevops-www": {
      "servers": [
        {
          "host": "dotnetdevops-www.azurewebsites.net",
          "weigth": 1
        }
      ]
    },
    "serverless-identity": {
      "servers": [
        {
          "host": "serverless-identity.azurewebsites.net",
          "weigth": 1
        }
      ]
    },
    "frontdoor-api": {
      "servers": [
        {
          "host": "localhost:5860",
          "weigth": 1
        }
      ]
    },
    "letsencrypt-provider": {
      "servers": [
        {
          "host": "dotnetdevops-letsencrypt-dev-ci.azurewebsites.net",
          "weight": 1,
          "extensions": {
            "azure": {
              "functions": {
                "authentication": {
                  "subscriptionId": "0fd7128b-5305-49da-a400-b7a37feb271c",
                  "resourceGroupName": "dotnetdevops",
                  "name": "dotnetdevops-letsencrypt",
                  "slot": "dev-ci"
                }
              }
            }
          }
        }
      ]
    }
  },
  "servers": [
    {
      "hostnames": [ "io-board.eu.ngrok.io" ],
      "locations": [
        {
          "route": "~* ^/(subscriptions/[^/]+/)?providers/(IasC.AgentlessTasks)",
          "proxy_pass": "https://localhost:44321/",
          "cors": "[CorsPolicyBuilder().AllowAnyOrigin().AllowAnyMethod().AllowAnyHeader().AllowCredentials().WithExposedHeaders('Location')]"
        },
        {
          "route": "~* ^/(subscriptions/[^/]+/)?providers/(kjeldager.phoner)",
          "proxy_pass": "http://localhost:9442/",
          "cors": "[CorsPolicyBuilder().AllowAnyOrigin().AllowAnyMethod().AllowAnyHeader().AllowCredentials().WithExposedHeaders('Location')]"
        },

        {
          "route": "~* ^/(subscriptions/[^/]+/)?provider/(IO-Board.Proxy)",
          "proxy_pass": "https://localhost:44365/",
          "cors": "[CorsPolicyBuilder().AllowAnyOrigin().AllowAnyMethod().AllowAnyHeader().AllowCredentials().WithExposedHeaders('Location')]"
        },
        {
          "route": "~* ^/(subscriptions/[^/]+/)?providers/(LeadDesk.CallStatus)",
          "proxy_pass": "http://localhost:7002/",
          "cors": "[CorsPolicyBuilder().AllowAnyOrigin().AllowAnyMethod().AllowAnyHeader().AllowCredentials().WithExposedHeaders('Location')]"
        },
        {
          "route": "~* ^/(subscriptions/[^/]+/)?providers/(Kjeldager.PowerPlatformProvider)",
          "proxy_pass": "https://localhost:44313/",
          "cors": "[CorsPolicyBuilder().AllowAnyOrigin().AllowAnyMethod().AllowAnyHeader().AllowCredentials().WithExposedHeaders('Location')]"
        },
        {
          "route": "/identity/",
          "proxy_pass": "http://localhost:13000/"
          //  "cors": "[CorsPolicyBuilder().AllowAnyOrigin().AllowAnyMethod().AllowAnyHeader().WithExposedHeaders('Location')]"
        },
        {
          "route": "= /subscriptions",
          "rewrite": "^.*$ /subscriptions",
          "proxy_pass": "http://localhost:13000/",
          "cors": "[CorsPolicyBuilder().AllowAnyOrigin().AllowAnyMethod().AllowAnyHeader().WithExposedHeaders('Location')]"
        },
        {
          "route": "= /smscph/",
          "rewrite": "^.*$ /index.html",
          "proxy_pass": "https://localhost:44397/"
        },
        //{
        //  "route": "/blog/",
        //  "index": [ "index.html" ],
        //  "proxy_pass": "[blobFindVersion('https://kjeldager-cdn/libs/','com.kjeldager.content-editor')]"
        //},
        {
          "route": "/blog/",
          "index": [ "index.html" ],
          "proxy_pass": "http://localhost:3000/blog/",
          "headers": {
            "Cache-Tag": "ka-bg"
          }
        },
        {
          "route": "~* ^/blog/api/(subscriptions/[^/]+/)?providers/(Kjeldager.ContentEditor)",
          "proxy_pass": "http://localhost:6453/",
          "rewrite": "^/blog/api(/.*)$ $1 last;",
          "cors": "[CorsPolicyBuilder().AllowAnyOrigin().AllowAnyMethod().AllowAnyHeader().AllowCredentials().WithExposedHeaders('Location')]",
          "authorization": {
            //  "redirectUrl": "https://io-board.eu.ngrok.io/blog/",
            //  "clientId": "60a8bfb7-01e9-4956-b2cc-23c251250d8a",
            "scopes": [ "api://92625908-aca3-45a5-8fc8-8913b31bb1fa/.default" ]
            //   "additionalLoginParams": [ "response_type=code id_token", "resource=<app_id>", "domain_hint=<domain_name>" ]
          }
        },
        {
          "route": "/iasc/",
          "proxy_pass": "https://localhost:44334/"
        },
        {
          "route": "/corona/",
          "proxy_pass": "http://localhost:3000/"
        },
        {
          "route": "/banking/",
          "proxy_pass": "http://localhost:7384/"
        },
        {
          "route": "~* ^/(subscriptions/[^/]+/)?providers/(Kjeldager.PowerPlatform|DotNetDevOps.PowerPlatformProvider)",
          "proxy_pass": "http://localhost:7484/",
          "cors": "[CorsPolicyBuilder().AllowAnyOrigin().AllowAnyMethod().AllowAnyHeader().WithExposedHeaders('Location')]"
        },

        {

          "route": "= /runtime/webhooks/EventGrid",
          "rewrite": "^.*$ /runtime/webhooks/EventGrid",
          "proxy_pass": "http://localhost:7333/"
        },
        {
          "route": "= /delegate/Kombit/IoT",
          "rewrite": "^.*$ /runtime/webhooks/EventGrid",
          "proxy_pass": "http://localhost:7071/"
        },
        {
          "route": "~* ^/(subscriptions/[^/]+/)?providers/(EarthML.AssetsManagement|EarthML.Notifications)",
          "proxy_pass": "http://localhost:7423/",
          "cors": "[CorsPolicyBuilder().AllowAnyOrigin().AllowAnyMethod().AllowAnyHeader().AllowCredentials().WithExposedHeaders('Location')]"
        },
        {
          "route": "/smscph/",
          "proxy_pass": "https://localhost:44397/"
        },
        {
          "route": "/.well-known/acme-challenge/",
          "proxy_pass": "https://letsencrypt-provider/.well-known/acme-challenge/"
        },
        {
          "route": "~* ^/providers/(DotNETDevOps.LetsEncrypt)",
          "proxy_pass": "https://letsencrypt-provider/"
        },
        {
          "route": "~* ^/providers/(Kjeldager.SocialLink)",
          "proxy_pass": "http://sociallink-provider/",
          "cors": "[CorsPolicyBuilder().AllowAnyOrigin().AllowAnyMethod().AllowAnyHeader().WithExposedHeaders('Location')]"
        },
        {
          "route": "~* ^/(subscriptions/[^/]+/)?providers/(IO-Board.DataIngestor)",
          "proxy_pass": "http://localhost:7071/",
          "cors": "[CorsPolicyBuilder().AllowAnyOrigin().AllowAnyMethod().AllowAnyHeader().WithExposedHeaders('Location')]"
        },
        {
          "route": "~* ^/(subscriptions/[^/]+/)?providers/(smscph.gateway)",
          "proxy_pass": "http://localhost:7071/"
        },
        {
          "route": "~* ^/(subscriptions/[^/]+/)?providers/(io-board.replymaster)",
          "proxy_pass": "http://localhost:6553/"
        }
      ]
    },
    {
      "hostnames": [ "*.forms.io-board.com" ],
      "locations": [
        {
          "route": "/",
          "rewrite": "^.*$ /providers/io-board.forms/viewer",
          "proxy_pass": "https://localhost:44337/"
        }
      ]
    },
    {
      "hostnames": [ "dotnetdevops.eu.ngrok.io", "localhost" ],
      "locations": [
        {
          "route": "= /forms/",
          "rewrite": "^.*$ /index.html",
          "proxy_pass": "[blobFindVersion('http://io-board-cdn/libs/','com.io-board.forms')]"
        },
        {
          "route": "/forms/",
          "index": [ "index.html" ],
          "proxy_pass": "[blobFindVersion('http://io-board-cdn/libs/','com.io-board.forms')]"
        },
        {
          "route": "= /",
          "rewrite": "^.*$ /index.html",
          "proxy_pass": "[blobFindVersion('http://dotnetdevops-cdn/libs/','dotnetdevops-front','nuxt')]"
        },
        {
          "route": "/",
          "index": [ "index.html" ],
          "proxy_pass": "[blobFindVersion('http://dotnetdevops-cdn/libs/','dotnetdevops-front','nuxt')]"
        },
        {
          "route": "~* ^/(subscriptions/[^/]+/)?providers/(DotNETDevOps.AzureUsage)",
          "proxy_pass": "https://localhost:44391/",
          "health_check": {
            "path": "/.well-known/live",
            "interval": 60
          }
        },
        {
          "route": "~* ^/(subscriptions/[^/]+/)?providers/(com.kjeldager.twilio)",
          "proxy_pass": "http://localhost:7020/"
        },
        {
          "route": "~* ^/(subscriptions/[^/]+/)?providers/(io-board.forms)",
          "proxy_pass": "https://localhost:44337/",
          "cors": "[CorsPolicyBuilder().AllowAnyOrigin().AllowAnyMethod().AllowAnyHeader()]"
        },
        //{
        //  "route": "/",
        //  "proxy_pass": "[blobFindVersion('http://dotnetdevops-cdn/libs/','dotnetdevops-front')]",
        //  "features": {
        //    "CopyXForwardedHeaders": true,
        //    "AddXForwardedHeaders": true,
        //    "ApplyCorrelationId": true
        //  }
        //},
        //{
        //  "route": "/",
        //  "proxy_pass": "http://localhost:3000/",
        //  "health_check": {
        //    "uri": "/",
        //    "interval": 10,
        //    "fails": 3,
        //    "passes": 2,
        //    "port": "80"
        //  }
        //},
        {
          "route": "/.well-known/acme-challenge/",
          "proxy_pass": "https://letsencrypt-provider/.well-known/acme-challenge/"
        },
        {
          "route": "~* ^/providers/(DotNETDevOps.LetsEncrypt)",
          "proxy_pass": "https://letsencrypt-provider/",
          "health_check": {
            "path": "/",
            "interval": 30,
            "fails": 3,
            "passes": 2,
            "port": "80"
          }
        },
        {
          "route": "~* ^/providers/(DotNetDevOps.AzureTemplates)",
          "proxy_pass": "http://dotnetdevops-www/"
        },
        {
          "route": "= /frontdoor/",
          "proxy_pass": "[concat(blobFindVersion('http://dotnetdevops-cdn/libs/','frontdoor--front'),'index.html')]",
          "features": {
            "CopyXForwardedHeaders": true,
            "AddXForwardedHeaders": true,
            "ApplyCorrelationId": true
          }
        },
        {
          "route": "/frontdoor/",
          "proxy_pass": "[blobFindVersion('http://dotnetdevops-cdn/libs/','frontdoor--front')]",
          "features": {
            "CopyXForwardedHeaders": true,
            "AddXForwardedHeaders": true,
            "ApplyCorrelationId": true
          }
        }
      ]
    }

  ]

}